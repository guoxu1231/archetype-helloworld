<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
        >
    <modelVersion>4.0.0</modelVersion>
    <groupId>dominus</groupId>
    <artifactId>archetype-helloworld</artifactId>
    <packaging>jar</packaging>
    <version>0.5</version>
    <name>archetype-helloworld</name>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- AssertJ is not a part of Spring IO platform, so the version must be provided explicitly -->
        <assertj-core-version>3.1.0</assertj-core-version>
        <scala.version>2.10.5</scala.version>
        <scala.binary.version>2.10</scala.binary.version>
        <spark.home>/opt/Development/middleware/bigdata/spark-1.5.2-bin-hadoop2.6</spark.home>
        <spark.snapshot.assemblePath>
            /opt/Development/github_repo/spark/dist/lib/spark-assembly-2.0.0-SNAPSHOT-hadoop2.6.0.jar
        </spark.snapshot.assemblePath>
        <cxf.version>3.1.4</cxf.version>
    </properties>
    <parent>
        <groupId>dominus</groupId>
        <artifactId>my-archetype</artifactId>
        <version>0.0.2</version>
    </parent>

    <profiles>
        <profile>
            <id>java</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>

                <!-- slf4j logging -->
                <dependency>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                    <version>1.1.6</version>
                </dependency>

                <!--Utility -->
                <!-- Google Core Libraries for Java
                http://google.github.io/guava/releases/19.0/api/docs/-->
                <dependency>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                    <version>19.0</version>
                </dependency>


                <!-- Spring -->
                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                    <version>${spring.version}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>commons-logging</groupId>
                            <artifactId>commons-logging</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                    <version>${spring.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-jdbc</artifactId>
                    <version>${spring.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.springframework.batch</groupId>
                    <artifactId>spring-batch-core</artifactId>
                    <version>3.0.6.RELEASE</version>
                </dependency>


                <!-- JMS -->
                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-jms</artifactId>
                    <version>${spring.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.activemq</groupId>
                    <artifactId>activemq-broker</artifactId>
                    <version>5.10.2</version>
                </dependency>
                <!--<dependency>-->
                <!--<groupId>org.apache.activemq</groupId>-->
                <!--<artifactId>activemq-pool</artifactId>-->
                <!--</dependency>-->
                <!--<dependency>-->
                <!--<groupId>org.apache.activemq</groupId>-->
                <!--<artifactId>activemq-jms-pool</artifactId>-->
                <!--</dependency>-->

                <!-- Zookeeper, 3.3.1 is used in org.I0Itec.zkclient 0.4
                     Zookeeper, 3.4.6 is used in org.I0Itec.zkclient 0.7
                -->
                <dependency>
                    <groupId>org.apache.zookeeper</groupId>
                    <artifactId>zookeeper</artifactId>
                    <version>3.4.6</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-log4j12</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>

                <!-- EE: Apache Kafka begin
                scala2.11 java.lang.NoSuchMethodError: scala.Predef$.ArrowAssoc(Ljava/lang/Object;)Ljava/lang/Object;
                -->
                <dependency>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>kafka_2.11</artifactId>
                    <version>0.10.0.0</version>
                    <scope>compile</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-log4j12</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>kafka-clients</artifactId>
                    <version>0.10.0.0</version>
                </dependency>
                <dependency>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                    <version>2.11.8</version>
                </dependency>
                <!-- EE: Apache Kafka end -->
                <!-- 0.4 with kafka 0.8.2.2, 0.7 with kafka 0.9-->
                <dependency>
                    <groupId>com.101tec</groupId>
                    <artifactId>zkclient</artifactId>
                    <version>0.7</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-log4j12</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <!--EE: Apache Kafka End -->

                <!--EE: Spring-Kafka Integration-->
                <dependency>
                    <groupId>org.springframework.kafka</groupId>
                    <artifactId>spring-kafka</artifactId>
                    <version>1.0.0.BUILD-SNAPSHOT</version>
                    <scope>system</scope>
                    <systemPath>${basedir}/lib/spring-kafka/spring-kafka-1.0.0.BUILD-SNAPSHOT.jar</systemPath>
                </dependency>

                <!--memcached client -->
                <dependency>
                    <groupId>net.spy</groupId>
                    <artifactId>spymemcached</artifactId>
                    <version>2.12.0</version>
                    <scope>compile</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.mina</groupId>
                    <artifactId>mina-core</artifactId>
                    <version>2.0.4</version>
                </dependency>

                <!-- Distributed Coordination -->
                <dependency>
                    <groupId>org.apache.curator</groupId>
                    <artifactId>curator-recipes</artifactId>
                    <version>2.9.0</version>
                </dependency>

                <!-- JDBC -->
                <dependency>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-dbcp2</artifactId>
                    <version>2.1.1</version>
                </dependency>
                <!-- JDBC Mybatis -->
                <dependency>
                    <groupId>org.mybatis</groupId>
                    <artifactId>mybatis</artifactId>
                    <version>3.3.0</version>
                </dependency>

                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>5.1.37</version>
                </dependency>

                <dependency>
                    <groupId>oracle.jdbc</groupId>
                    <artifactId>ojdbc</artifactId>
                    <version>6</version>
                    <scope>system</scope>
                    <systemPath>${basedir}/lib/ojdbc/ojdbc6.jar</systemPath>
                    <!-- must match file name -->
                </dependency>

                <!--mongodb -->
                <dependency>
                    <groupId>org.springframework.data</groupId>
                    <artifactId>spring-data-mongodb</artifactId>
                    <version>1.6.3.RELEASE</version>
                </dependency>

                <!-- EE: Redis -->
                <dependency>
                    <groupId>redis.clients</groupId>
                    <artifactId>jedis</artifactId>
                    <version>2.8.1</version>
                    <type>jar</type>
                    <scope>compile</scope>
                </dependency>

                <!--hdfs & mapreduce also match CDH 5.4.x-->
                <!-- Hadoop main client artifact -->
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-client</artifactId>
                    <version>2.6.2</version>
                    <exclusions><!-- find out how log4j is getting on your path run mvn dependency:tree and comb through -->
                        <exclusion>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-log4j12</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>

                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-yarn-client</artifactId>
                    <version>2.6.2</version>
                </dependency>

                <!-- NIO framework -->
                <dependency>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-all</artifactId>
                    <!-- Use 'netty-all' for 4.0 or above -->
                    <version>4.0.32.Final</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.mina</groupId>
                    <artifactId>mina-core</artifactId>
                    <version>2.0.9</version>
                </dependency>

                <!--Groovy Shell -->
                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-jsr223</artifactId>
                    <version>2.4.6</version>
                </dependency>

                <!--Sqoop Java Client API-->
                <dependency>
                    <groupId>org.apache.sqoop</groupId>
                    <artifactId>sqoop-client</artifactId>
                    <version>1.99.6</version>
                </dependency>

                <!-- Oozie Java Client API-->
                <dependency>
                    <groupId>org.apache.oozie</groupId>
                    <artifactId>oozie-client</artifactId>
                    <version>4.2.0</version>
                    <!--
                    SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/Development/maven_repo/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/Development/maven_repo/org/slf4j/slf4j-simple/1.6.6/slf4j-simple-1.6.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
                    -->
                    <exclusions>
                        <exclusion>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-simple</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>

                <!-- template engine -->
                <dependency>
                    <groupId>org.apache.velocity</groupId>
                    <artifactId>velocity</artifactId>
                    <version>1.7</version>
                </dependency>

                <!--EE: alibaba dubbo rpc framework -->
                <!--<dependency>-->
                <!--<groupId>com.alibaba</groupId>-->
                <!--<artifactId>dubbo</artifactId>-->
                <!--<version>2.5.4-SNAPSHOT</version>-->
                <!--</dependency>-->

                <!-- persistent framework -->
                <dependency>
                    <groupId>org.mybatis</groupId>
                    <artifactId>mybatis</artifactId>
                    <version>3.2.8</version>
                </dependency>
                <dependency>
                    <groupId>org.mybatis</groupId>
                    <artifactId>mybatis-spring</artifactId>
                    <version>1.3.0</version>
                </dependency>
                <!-- EE:aliyun ons client-->
                <dependency>
                    <groupId>com.aliyun.openservices</groupId>
                    <artifactId>ons-client</artifactId>
                    <version>1.2.1</version>
                </dependency>
                <!-- EE:ons open api management-->
                <!--<dependency>-->
                <!--<groupId>com.aliyun</groupId>-->
                <!--<artifactId>aliyun-java-sdk-ons4financehz</artifactId>-->
                <!--<version>1.1.1-SNAPSHOT</version>-->
                <!--<scope>system</scope>-->
                <!--<systemPath>${basedir}/lib/aliyun/aliyun-java-sdk-ons4financehz-1.1.1-SNAPSHOT.jar</systemPath>-->
                <!--</dependency>-->
                <dependency>
                    <groupId>com.aliyun</groupId>
                    <artifactId>aliyun-java-sdk-ons</artifactId>
                    <version>1.1.1-SNAPSHOT</version>
                    <scope>system</scope>
                    <systemPath>${basedir}/lib/aliyun/aliyun-java-sdk-ons-1.2.0-SNAPSHOT.jar</systemPath>
                </dependency>
                <dependency>
                    <groupId>com.aliyun</groupId>
                    <artifactId>aliyun-java-sdk-core</artifactId>
                    <version>2.4.2</version>
                </dependency>
                <!-- EE: aliyun direct mail-->
                <!--<dependency>-->
                <!--<groupId>com.aliyun</groupId>-->
                <!--<artifactId>aliyun-java-sdk-dm</artifactId>-->
                <!--<version>2.0.0-rc2</version>-->
                <!--</dependency>-->
                <dependency>
                    <groupId>javax.mail</groupId>
                    <artifactId>mail</artifactId>
                    <version>1.4.7</version>
                </dependency>
                <!--EE: Java Mail & Scheduling Util -->
                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context-support</artifactId>
                    <version>${spring.version}</version>
                </dependency>

                <!--EE: retry framework-->
                <dependency>
                    <groupId>org.springframework.retry</groupId>
                    <artifactId>spring-retry</artifactId>
                    <version>1.1.2.RELEASE</version>
                </dependency>

                <!--EE: httpclient -->
                <dependency>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                    <version>4.5.2</version>
                </dependency>

                <!--EE: Alidayu -->
                <dependency>
                    <groupId>com.aliyun</groupId>
                    <artifactId>alidayu</artifactId>
                    <version>auto_1455552377940-20160607</version>
                    <scope>system</scope>
                    <systemPath>${basedir}/lib/aliyun/alidayu/taobao-sdk-java-auto_1455552377940-20160608.jar
                    </systemPath>
                </dependency>

                <!--EE: quartz scheduler -->
                <dependency>
                    <groupId>org.quartz-scheduler</groupId>
                    <artifactId>quartz</artifactId>
                    <version>2.2.1</version>
                </dependency>

                <!--mysql binlog connector-->
                <dependency>
                    <groupId>com.github.shyiko</groupId>
                    <artifactId>mysql-binlog-connector-java</artifactId>
                    <version>0.3.1</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Xms1024m -Xmx2048m</argLine>
                    <testSourceDirectory>${basedir}/src/main/java/</testSourceDirectory>
                    <testClassesDirectory>${project.build.directory}/classes/</testClassesDirectory>
                    <includes>
                        <!-- JDBC begin-->
                        <include>dominus.intg.datastore.mysql.MySqlDDLTest</include>
                        <include>dominus.intg.datastore.mysql.MySqlMetaDataTest</include>
                        <!-- Misc -->
                        <include>dominus.intg.scripting.GroovyIntgTest</include>
                        <include>dominus.intg.ws.jaxb.XmlBindingTest</include>
                        <!-- RPC -->
                        <!--<include>dominus.intg.rpc.dubbo.TestDubboLocalInvoke</include>-->
                        <!-- Kafka & ZK -->
                        <include>dominus.intg.jms.kafka09.KafkaEmbeddedServerTestCase</include>
                        <include>dominus.intg.jms.kafka09.KafkaProducerTestcase</include>
                        <include>dominus.intg.jms.kafka09.KafkaConsumerTestcase</include>
                        <include>dominus.intg.jms.kafka09.KafkaAdminTestCase</include>
                        <!--<include>dominus.intg.jms.kafka09.SpringKafkaTestCase</include>-->
                        <!-- Mongodb -->
                        <include>dominus.intg.datastore.mongodb.MongoIntgTest</include>
                        <include>dominus.intg.datastore.redis.TestRedis</include>
                        <!-- ORM integration -->
                        <include>dominus.intg.datastore.persistent.mybatis.TestMyBatisDao</include>
                        <!-- java language -->
                        <include>dominus.language.threads.TestSynchronizer</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>2.2</version>
                <executions>
                    <execution>
                        <id>xjc</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sourceType>xmlschema</sourceType>
                    <!-- The package of your generated sources -->
                    <packageName>dominus.intg.ws.jaxb.javabean</packageName>
                    <sources>
                        <source>src/main/resources/ws/xml/Person.xsd</source>
                    </sources>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <repositories>

    </repositories>

</project>
